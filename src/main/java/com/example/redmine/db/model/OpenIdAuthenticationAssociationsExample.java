package com.example.redmine.db.model;

import java.util.ArrayList;
import java.util.List;

public class OpenIdAuthenticationAssociationsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public OpenIdAuthenticationAssociationsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIssuedIsNull() {
            addCriterion("issued is null");
            return (Criteria) this;
        }

        public Criteria andIssuedIsNotNull() {
            addCriterion("issued is not null");
            return (Criteria) this;
        }

        public Criteria andIssuedEqualTo(Integer value) {
            addCriterion("issued =", value, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedNotEqualTo(Integer value) {
            addCriterion("issued <>", value, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedGreaterThan(Integer value) {
            addCriterion("issued >", value, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedGreaterThanOrEqualTo(Integer value) {
            addCriterion("issued >=", value, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedLessThan(Integer value) {
            addCriterion("issued <", value, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedLessThanOrEqualTo(Integer value) {
            addCriterion("issued <=", value, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedIn(List<Integer> values) {
            addCriterion("issued in", values, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedNotIn(List<Integer> values) {
            addCriterion("issued not in", values, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedBetween(Integer value1, Integer value2) {
            addCriterion("issued between", value1, value2, "issued");
            return (Criteria) this;
        }

        public Criteria andIssuedNotBetween(Integer value1, Integer value2) {
            addCriterion("issued not between", value1, value2, "issued");
            return (Criteria) this;
        }

        public Criteria andLifetimeIsNull() {
            addCriterion("lifetime is null");
            return (Criteria) this;
        }

        public Criteria andLifetimeIsNotNull() {
            addCriterion("lifetime is not null");
            return (Criteria) this;
        }

        public Criteria andLifetimeEqualTo(Integer value) {
            addCriterion("lifetime =", value, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeNotEqualTo(Integer value) {
            addCriterion("lifetime <>", value, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeGreaterThan(Integer value) {
            addCriterion("lifetime >", value, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("lifetime >=", value, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeLessThan(Integer value) {
            addCriterion("lifetime <", value, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeLessThanOrEqualTo(Integer value) {
            addCriterion("lifetime <=", value, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeIn(List<Integer> values) {
            addCriterion("lifetime in", values, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeNotIn(List<Integer> values) {
            addCriterion("lifetime not in", values, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeBetween(Integer value1, Integer value2) {
            addCriterion("lifetime between", value1, value2, "lifetime");
            return (Criteria) this;
        }

        public Criteria andLifetimeNotBetween(Integer value1, Integer value2) {
            addCriterion("lifetime not between", value1, value2, "lifetime");
            return (Criteria) this;
        }

        public Criteria andHandleIsNull() {
            addCriterion("handle is null");
            return (Criteria) this;
        }

        public Criteria andHandleIsNotNull() {
            addCriterion("handle is not null");
            return (Criteria) this;
        }

        public Criteria andHandleEqualTo(String value) {
            addCriterion("handle =", value, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleNotEqualTo(String value) {
            addCriterion("handle <>", value, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleGreaterThan(String value) {
            addCriterion("handle >", value, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleGreaterThanOrEqualTo(String value) {
            addCriterion("handle >=", value, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleLessThan(String value) {
            addCriterion("handle <", value, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleLessThanOrEqualTo(String value) {
            addCriterion("handle <=", value, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleLike(String value) {
            addCriterion("handle like", value, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleNotLike(String value) {
            addCriterion("handle not like", value, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleIn(List<String> values) {
            addCriterion("handle in", values, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleNotIn(List<String> values) {
            addCriterion("handle not in", values, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleBetween(String value1, String value2) {
            addCriterion("handle between", value1, value2, "handle");
            return (Criteria) this;
        }

        public Criteria andHandleNotBetween(String value1, String value2) {
            addCriterion("handle not between", value1, value2, "handle");
            return (Criteria) this;
        }

        public Criteria andAssocTypeIsNull() {
            addCriterion("assoc_type is null");
            return (Criteria) this;
        }

        public Criteria andAssocTypeIsNotNull() {
            addCriterion("assoc_type is not null");
            return (Criteria) this;
        }

        public Criteria andAssocTypeEqualTo(String value) {
            addCriterion("assoc_type =", value, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeNotEqualTo(String value) {
            addCriterion("assoc_type <>", value, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeGreaterThan(String value) {
            addCriterion("assoc_type >", value, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeGreaterThanOrEqualTo(String value) {
            addCriterion("assoc_type >=", value, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeLessThan(String value) {
            addCriterion("assoc_type <", value, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeLessThanOrEqualTo(String value) {
            addCriterion("assoc_type <=", value, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeLike(String value) {
            addCriterion("assoc_type like", value, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeNotLike(String value) {
            addCriterion("assoc_type not like", value, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeIn(List<String> values) {
            addCriterion("assoc_type in", values, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeNotIn(List<String> values) {
            addCriterion("assoc_type not in", values, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeBetween(String value1, String value2) {
            addCriterion("assoc_type between", value1, value2, "assocType");
            return (Criteria) this;
        }

        public Criteria andAssocTypeNotBetween(String value1, String value2) {
            addCriterion("assoc_type not between", value1, value2, "assocType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated do_not_delete_during_merge Sun Jun 05 22:10:02 JST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.open_id_authentication_associations
     *
     * @mbggenerated Sun Jun 05 22:10:02 JST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}