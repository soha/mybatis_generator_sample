<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.redmine.db.mapper.ChangesMapper" >
  <resultMap id="BaseResultMap" type="com.example.redmine.db.model.Changes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="changeset_id" property="changesetId" jdbcType="INTEGER" />
    <result column="action" property="action" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="from_path" property="fromPath" jdbcType="VARCHAR" />
    <result column="from_revision" property="fromRevision" jdbcType="VARCHAR" />
    <result column="revision" property="revision" jdbcType="VARCHAR" />
    <result column="branch" property="branch" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    id, changeset_id, action, path, from_path, from_revision, revision, branch
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.redmine.db.model.ChangesExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from public.changes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.redmine.db.model.ChangesKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.changes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.redmine.db.model.ChangesKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    delete from public.changes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.redmine.db.model.ChangesExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    delete from public.changes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.redmine.db.model.Changes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    insert into public.changes (id, changeset_id, action, 
      path, from_path, from_revision, 
      revision, branch)
    values (#{id,jdbcType=INTEGER}, #{changesetId,jdbcType=INTEGER}, #{action,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{fromPath,jdbcType=VARCHAR}, #{fromRevision,jdbcType=VARCHAR}, 
      #{revision,jdbcType=VARCHAR}, #{branch,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.redmine.db.model.Changes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    insert into public.changes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="changesetId != null" >
        changeset_id,
      </if>
      <if test="action != null" >
        action,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="fromPath != null" >
        from_path,
      </if>
      <if test="fromRevision != null" >
        from_revision,
      </if>
      <if test="revision != null" >
        revision,
      </if>
      <if test="branch != null" >
        branch,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="changesetId != null" >
        #{changesetId,jdbcType=INTEGER},
      </if>
      <if test="action != null" >
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="fromPath != null" >
        #{fromPath,jdbcType=VARCHAR},
      </if>
      <if test="fromRevision != null" >
        #{fromRevision,jdbcType=VARCHAR},
      </if>
      <if test="revision != null" >
        #{revision,jdbcType=VARCHAR},
      </if>
      <if test="branch != null" >
        #{branch,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.redmine.db.model.ChangesExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    select count(*) from public.changes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    update public.changes
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.changesetId != null" >
        changeset_id = #{record.changesetId,jdbcType=INTEGER},
      </if>
      <if test="record.action != null" >
        action = #{record.action,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.fromPath != null" >
        from_path = #{record.fromPath,jdbcType=VARCHAR},
      </if>
      <if test="record.fromRevision != null" >
        from_revision = #{record.fromRevision,jdbcType=VARCHAR},
      </if>
      <if test="record.revision != null" >
        revision = #{record.revision,jdbcType=VARCHAR},
      </if>
      <if test="record.branch != null" >
        branch = #{record.branch,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    update public.changes
    set id = #{record.id,jdbcType=INTEGER},
      changeset_id = #{record.changesetId,jdbcType=INTEGER},
      action = #{record.action,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      from_path = #{record.fromPath,jdbcType=VARCHAR},
      from_revision = #{record.fromRevision,jdbcType=VARCHAR},
      revision = #{record.revision,jdbcType=VARCHAR},
      branch = #{record.branch,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.redmine.db.model.Changes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    update public.changes
    <set >
      <if test="changesetId != null" >
        changeset_id = #{changesetId,jdbcType=INTEGER},
      </if>
      <if test="action != null" >
        action = #{action,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="fromPath != null" >
        from_path = #{fromPath,jdbcType=VARCHAR},
      </if>
      <if test="fromRevision != null" >
        from_revision = #{fromRevision,jdbcType=VARCHAR},
      </if>
      <if test="revision != null" >
        revision = #{revision,jdbcType=VARCHAR},
      </if>
      <if test="branch != null" >
        branch = #{branch,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.redmine.db.model.Changes" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 05 22:10:02 JST 2016.
    -->
    update public.changes
    set changeset_id = #{changesetId,jdbcType=INTEGER},
      action = #{action,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      from_path = #{fromPath,jdbcType=VARCHAR},
      from_revision = #{fromRevision,jdbcType=VARCHAR},
      revision = #{revision,jdbcType=VARCHAR},
      branch = #{branch,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>